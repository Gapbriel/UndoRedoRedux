{"version":3,"sources":["actions/index.js","components/Link.js","containers/FilterLink.js","components/Footer.js","containers/AddTodo.js","components/Todo.js","components/TodoList.js","containers/VisibleTodoList.js","containers/Undo.js","components/App.js","reducers/todos.js","reducers/visibilityFilter.js","reducers/index.js","index.js"],"names":["nextTodoId","VisibilityFilters","undoAble","type","redoAble","Link","active","children","onClick","disabled","style","marginLeft","connect","state","ownProps","filter","visibilityFilter","dispatch","Footer","FilterLink","input","onSubmit","e","text","preventDefault","value","trim","id","ref","node","Todo","completed","textDecoration","TodoList","todos","toggleTodo","map","todo","getVisibleTodos","t","Error","Undo","canUndo","onUndo","canRedo","onRedo","historyLength","history","length","past","presentHistory","App","VisibleTodoList","initialState","addToHistory","action","todosToggle","present","future","lastAction","nextAction","combineReducers","store","createStore","rootReducer","composeWithDevTools","render","document","getElementById"],"mappings":"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","file":"static/js/main.6568a3f0.chunk.js","sourcesContent":["let nextTodoId = 0\r\nexport const addTodo = text => ({\r\n  type: 'ADD_TODO',\r\n  id: nextTodoId++,\r\n  text\r\n})\r\n\r\nexport const setVisibilityFilter = filter => ({\r\n  type: 'SET_VISIBILITY_FILTER',\r\n  filter\r\n})\r\n\r\nexport const toggleTodo = id => ({\r\n  type: 'TOGGLE_TODO',\r\n  id\r\n})\r\n\r\nexport const VisibilityFilters = {\r\n  SHOW_ALL: 'SHOW_ALL',\r\n  SHOW_COMPLETED: 'SHOW_COMPLETED',\r\n  SHOW_ACTIVE: 'SHOW_ACTIVE'\r\n}\r\n\r\nexport const undoAble = {\r\n  type: 'UNDO'\r\n}\r\n\r\nexport const redoAble = {\r\n  type: 'REDO'\r\n}\r\n\r\nexport const undoTodo = {\r\n  type: 'UNDO_TODO'\r\n}\r\n\r\nexport const addHistory = (historyName, id )=> ({\r\n  type: 'ADD_HISTORY',\r\n  historyName,\r\n  id\r\n})","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst Link = ({ active, children, onClick }) => (\r\n    <button\r\n       onClick={onClick}\r\n       disabled={active}\r\n       style={{\r\n           marginLeft: '4px',\r\n       }}\r\n    >\r\n      {children}\r\n    </button>\r\n)\r\n\r\nLink.propTypes = {\r\n  active: PropTypes.bool.isRequired,\r\n  children: PropTypes.node.isRequired,\r\n  onClick: PropTypes.func.isRequired\r\n}\r\n\r\nexport default Link\r\n","import { connect } from 'react-redux'\r\nimport { setVisibilityFilter } from '../actions'\r\nimport Link from '../components/Link'\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n  active: ownProps.filter === state.visibilityFilter\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch, ownProps) => ({\r\n  onClick: () => dispatch(setVisibilityFilter(ownProps.filter))\r\n})\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Link)\r\n","import React from 'react'\r\nimport FilterLink from '../containers/FilterLink'\r\nimport { VisibilityFilters } from '../actions'\r\n\r\nconst Footer = () => (\r\n  <div>\r\n    <span>Show: </span>\r\n    <FilterLink filter={VisibilityFilters.SHOW_ALL}>\r\n      All\r\n    </FilterLink>\r\n    <FilterLink filter={VisibilityFilters.SHOW_ACTIVE}>\r\n      Active\r\n    </FilterLink>\r\n    <FilterLink filter={VisibilityFilters.SHOW_COMPLETED}>\r\n      Completed\r\n    </FilterLink>\r\n  </div>\r\n)\r\n\r\nexport default Footer\r\n","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { addTodo } from '../actions'\r\n\r\nconst AddTodo = ({ dispatch }) => {\r\n  let input\r\n\r\n  return (\r\n    <div>\r\n      <form onSubmit={e => {\r\n        e.preventDefault()\r\n        if (!input.value.trim()) {\r\n          return\r\n        }\r\n        dispatch(addTodo(input.value))\r\n        input.value = ''\r\n      }}>\r\n        <input ref={node => input = node} />\r\n        <button type=\"submit\">\r\n          Add Todo\r\n        </button>\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default connect()(AddTodo)\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst Todo = ({ onClick, completed, text }) => (\r\n  <li\r\n    onClick={onClick}\r\n    style={{\r\n      textDecoration: completed ? 'line-through' : 'none'\r\n    }}\r\n  >\r\n    {text}\r\n  </li>\r\n)\r\n\r\nTodo.propTypes = {\r\n  onClick: PropTypes.func.isRequired,\r\n  completed: PropTypes.bool.isRequired,\r\n  text: PropTypes.string.isRequired\r\n}\r\n\r\nexport default Todo\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport Todo from './Todo'\r\n\r\nconst TodoList = ({ todos, toggleTodo }) => (\r\n  <ul>\r\n    {todos.map(todo =>\r\n      <Todo\r\n        key={todo.id}\r\n        {...todo}\r\n        onClick={() => toggleTodo(todo.id)}\r\n      />\r\n    )}\r\n  </ul>\r\n)\r\n\r\nTodoList.propTypes = {\r\n  todos: PropTypes.arrayOf(PropTypes.shape({\r\n    id: PropTypes.number.isRequired,\r\n    completed: PropTypes.bool.isRequired,\r\n    text: PropTypes.string.isRequired\r\n  }).isRequired).isRequired,\r\n  toggleTodo: PropTypes.func.isRequired\r\n}\r\n\r\nexport default TodoList\r\n","import { connect } from 'react-redux';\r\nimport { toggleTodo } from '../actions';\r\nimport TodoList from '../components/TodoList';\r\nimport { VisibilityFilters } from '../actions';\r\n\r\nconst getVisibleTodos = (todos, filter) => {\r\n  switch (filter) {\r\n    case VisibilityFilters.SHOW_ALL:\r\n      return todos;\r\n    case VisibilityFilters.SHOW_COMPLETED:\r\n      return todos.filter((t) => t.completed);\r\n    case VisibilityFilters.SHOW_ACTIVE:\r\n      return todos.filter((t) => !t.completed);\r\n    default:\r\n      throw new Error('Unknown filter: ' + filter);\r\n  }\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  todos: getVisibleTodos(state.todos.todos, state.visibilityFilter),\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  toggleTodo: (id) => {\r\n    dispatch(toggleTodo(id));\r\n  },\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TodoList);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { undoAble, redoAble } from '../actions';\r\n\r\nlet Undo = ({ canUndo, onUndo , canRedo, onRedo}) => (\r\n  <p>\r\n    <button onClick={onUndo} disabled={!canUndo}>\r\n      Undo\r\n    </button>\r\n    <button onClick={onRedo} disabled={!canRedo}>\r\n      Redo\r\n    </button>\r\n  </p>\r\n);\r\n\r\nconst mapStateToProps = (state) => {\r\n  const historyLength = state.todos?.history?.length;\r\n  return { canUndo: state.todos.history[historyLength-1]?.past.length > 0 &&  state.todos.presentHistory > -1 ,\r\n  canRedo: state.todos.history.length > state.todos.presentHistory + 1 && state.todos.history.length > 0}\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  onUndo: () => {\r\n    dispatch(undoAble);\r\n  },\r\n  onRedo: () => {\r\n    dispatch(redoAble);\r\n  },\r\n});\r\n\r\nUndo = connect(mapStateToProps, mapDispatchToProps)(Undo);\r\n\r\nexport default Undo;\r\n","import React from 'react'\r\nimport Footer from './Footer'\r\nimport AddTodo from '../containers/AddTodo'\r\nimport VisibleTodoList from '../containers/VisibleTodoList'\r\nimport Undo from '../containers/Undo'\r\n\r\nconst App = () => (\r\n  <div>\r\n    <Undo />\r\n    <AddTodo />\r\n    <VisibleTodoList />\r\n    <Footer />\r\n  </div>\r\n)\r\n\r\nexport default App\r\n","const initialState = {\r\n  todos: [],\r\n  presentHistory: -2,\r\n  history: [],\r\n};\r\n\r\nfunction addToHistory(state, action , todosToggle = []) {\r\n  let history = [];\r\n  if (state.todos.length) {\r\n    let present = { id: action.id, text: action.text, completed: action.completed}\r\n    history = [\r\n      ...state.history,\r\n      {\r\n        past: [...state.todos],\r\n        present,\r\n        future: action.type === 'ADD_TODO' ? [...state.todos , present] : [...todosToggle]\r\n      },\r\n    ];\r\n  }\r\n  return history;\r\n}\r\n\r\nconst todos = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case 'ADD_TODO':\r\n      let present =  {\r\n        id: action.id,\r\n        text: action.text,\r\n        completed: false,\r\n      }\r\n      action.completed = false     \r\n      return {\r\n        ...state,\r\n        todos: [\r\n          ...state.todos,\r\n         present,\r\n        ],\r\n        presentHistory : state.presentHistory + 1,\r\n        history: addToHistory(state, action),\r\n      };\r\n    case 'TOGGLE_TODO':\r\n      const todosToggle = state.todos.map((todo) => {\r\n        if (todo.id === action.id){ \r\n          action.completed = !todo.completed;\r\n          action.text = todo.text;\r\n          return { ...todo, completed: !todo.completed } \r\n        }\r\n        else return todo\r\n      })\r\n      return {\r\n        ...state,\r\n        todos: todosToggle,\r\n        presentHistory : state.presentHistory + 1,\r\n        history: addToHistory(state, action , todosToggle),\r\n      };\r\n\r\n    case 'UNDO':\r\n      const lastAction = state.history[state.presentHistory ]; // pop\r\n      return { ...state, presentHistory : state.presentHistory - 1  ,todos: lastAction.past };\r\n    case 'REDO':\r\n        const nextAction = state.history[state.presentHistory + 1];\r\n        return { ...state, presentHistory : state.presentHistory + 1,  todos: nextAction.future };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default todos;\r\n","import { VisibilityFilters } from '../actions'\r\n\r\nconst visibilityFilter = (state = VisibilityFilters.SHOW_ALL, action) => {\r\n  switch (action.type) {\r\n    case 'SET_VISIBILITY_FILTER':\r\n      return action.filter\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default visibilityFilter\r\n","import { combineReducers } from 'redux'\r\nimport todos from './todos'\r\nimport visibilityFilter from './visibilityFilter'\r\n\r\nexport default combineReducers({\r\n  todos,\r\n  visibilityFilter\r\n})\r\n","import React from 'react'\r\nimport { render } from 'react-dom'\r\nimport { createStore } from 'redux'\r\nimport { Provider } from 'react-redux'\r\nimport App from './components/App'\r\nimport rootReducer from './reducers'\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\n\r\nconst store = createStore(rootReducer,composeWithDevTools());\r\n\r\nrender(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById('root')\r\n)\r\n"],"sourceRoot":""}